/* ローカルフォント適用 */
@font-face {
    font-family: 'M+1p';
    src: url('fonts/MPLUS1p-Regular.ttf') format('truetype');
    font-weight: normal;
}
@font-face {
    font-family: 'M+1p';
    src: url('fonts/MPLUS1p-Bold.ttf') format('truetype');
    font-weight: bold;
}
@font-face {
    font-family: 'M+1p';
    src: url('fonts/MPLUS1p-Black.ttf') format('truetype');
    font-weight: 900;
}
@font-face {
    font-family: 'M+1p';
    src: url('fonts/MPLUS1p-Light.ttf') format('truetype');
    font-weight: 300;
}
@font-face {
    font-family: 'M+1p';
    src: url('fonts/MPLUS1p-Medium.ttf') format('truetype');
    font-weight: 500;
}
@font-face {
    font-family: 'M+1p';
    src: url('fonts/MPLUS1p-ExtraBold.ttf') format('truetype');
    font-weight: 800;
}
@font-face {
    font-family: 'M+1p';
    src: url('fonts/MPLUS1p-Thin.ttf') format('truetype');
    font-weight: 100;
}

{
    margin: 0;         /* 外側の余白をすべて0に */
    padding: 0;        /* 内側の余白もすべて0に */
    box-sizing: border-box;  /* パディングとボーダーを含めたサイズ計算 */
}

/* 全体のフォント適用 */
body {
    font-family: 'M+1p', sans-serif;
    text-align: center;
    margin: 0;
    padding: 0;
    background-color: #fff6e4;  /* 背景色 */
    min-height: 100vh;  /* 最小高さ */
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
}

/* バナーのデザイン */
.banner {
    width: 100%;
    height: 40px;
    background-color: #84ccce;
    display: flex;
    align-items: center;
    padding-left: 15px;
    position: static;
    margin-top: 60px;
    margin-bottom: 0;     /* 下の余白を削除 */
    z-index: 1000;
}

/* タイトルのデザイン */
.banner h1 {
    font-size: 16px;
    color: white;
    margin: 0;         /* これで上下の余白を完全に削除 */
    padding: 0;        /* ついでに内側の余白も確認 */
    font-weight: bold;
}

html, body {
    width: 100%;           /* 画面の幅をビューポートの100%に固定 */
    max-width: 100%;       /* 最大幅もビューポートの100%に制限 */
    overflow-x: hidden;    /* 水平方向のスクロールを無効にする */
}

/* 情報入力エリア（form-container）を左詰めに修正 */
.form-container {
    width: 80%;
    margin: 20px auto 0;
    text-align: left;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

/* 各入力フィールドを左揃え */
.form-group {
    position: relative;  /* 追加: サジェストボックスの基準にする */
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: 100%;
    max-width: 400px;
    margin-bottom: 15px;
}

/* 入力欄のテキストも左詰めにする */
input, select {
    width: 100%;
    padding: 5px;
    font-size: 1em;
    border: 1px solid #ccc;
    border-radius: 5px;
    text-align: left;
}

/* ボタンのデザイン */
button {
    margin-top: 10px;
    padding: 10px 20px;
    font-size: 1em;
    cursor: pointer;
    background-color: #09f;
    color: white;
    border: none;
    border-radius: 5px;
}
/* カードエリアの設定（カード間の空白調整可能に） */
#pokemonDisplay {
    width: var(--card-area-width, 88%);
    max-width: 100%;
    margin-left: var(--card-area-margin, auto);
    margin-right: var(--card-area-margin, auto);
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start; /* 左詰めでカードを並べる */
    gap: var(--card-gap, 8px); /* カード間の間隔を自由に変更可能に */
}

/* ✅ カードエリアのデザイン調整 */
.pokemon-box {
    width: 64.3px;
    height: 150px;
    text-align: center;
    border: 2px solid #ccc;
    border-radius: 10px;
    padding: 3px 5px;  /* ✅ 左右の余白を狭く */
    background-color: white;
    font-size: 0.6em;
    display: flex;
    flex-direction: column;
    line-height: 1.2;
    align-items: center;
    justify-content: space-between;
}

/* ✅ ポケモン画像 */
.pokemon-box img {
    width: 40px;
    height: 40px;
    border-radius: 10px;
}

/* ✅ ニックネーム（名前）を太字 */
.pokemon-box .nickname {
    font-weight: bold;
}

/* ✅ レベル表示を太字 */
.pokemon-box .level {
    font-weight: bold;
}

/* ✅ 「あと○○exp」の ○○ 部分だけ太字 */
.pokemon-box .exp-next {
    font-weight: normal;
}

.pokemon-box .exp-next strong {
    font-weight: bold;
}

/* ✅ 「睡ボ」アイコンのスタイル */
.pokemon-box .sleep-bonus {
    display: inline-block;
    background-color: #ffcc00;
    color: black;
    font-weight: bold;
    padding: 3px 6px;
    border-radius: 8px;
    font-size: 0.7em;
}

/* ✅ 性格アイコンのスタイル */
.pokemon-box .nature-symbol {
    display: inline-block;
    padding: 3px 6px;
    border-radius: 5px;
    font-weight: bold;
    color: white;
    font-size: 0.7em;
}

/* ✅ EXP↑（赤） */
.pokemon-box .exp-up {
    background-color: rgba(255, 0, 51, 0.7);
}

/* ✅ EXP↓（青） */
.pokemon-box .exp-down {
    background-color: rgba(51, 0, 255, 0.7);
}

/* ✅ 性格補正なし（グレー） */
.pokemon-box .nature-none {
    background-color: rgba(200, 200, 200, 0.7);
    color: black;
    font-weight: normal;
}

/* ✅ 「睡ボ」と性格アイコンを並べる */
.pokemon-box .exp-bonus-container {
    display: flex;
    gap: 4px;  /* アイコン間の余白 */
    justify-content: center;
    align-items: center;
}



/* サジェストボックスをテキストボックスの右に配置 */
.suggestion-box {
    position: absolute;
    top: 0;
    left: 0;
    transform: translateX(105%);  /* テキストボックスの右側に配置 */
    background-color: white;
    border: 1px solid #ccc;
    width: 150px;
    max-height: 150px;
    overflow-y: auto;
    z-index: 1000;
    display: none;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}
.suggestion-box div {
    padding: 8px;
    cursor: pointer;
}

.suggestion-box div:hover {
    background-color: #f0f0f0;
}
/* 画面が狭いスマホ向け（iPhone SEなど） */
@media screen and (max-width: 375px) { 
    .pokemon-box {
        width: 58px;
        height: 130px;
    }
    #pokemonDisplay {
        gap: 4px; /* 間隔を狭くする */
    }
}

/* 画面が広いスマホ / タブレット向け */
@media screen and (min-width: 800px) { 
    .pokemon-box {
        width: 75px;
        height: 170px;
    }
    #pokemonDisplay {
        gap: 10px; /* 間隔を広げる */
    }
}

/* PC向け（超ワイド画面の場合） */
@media screen and (min-width: 1200px) { 
    .pokemon-box {
        width: 80px;
        height: 180px;
    }
    #pokemonDisplay {
        gap: 12px;
    }
}

/* 性格選択エリアを横並びにする */
.nature-selection {
    display: flex;
    gap: 15px; /* ↑と↓の間隔を調整 */
    align-items: center;
}

/* 各チェックボックスと記号の間隔を適切に */
.nature-option {
    display: flex;
    align-items: center;
    gap: 5px; /* 記号とチェックボックスの間隔 */
}
/* ✅ 睡眠EXPボタン（共通スタイル） */
.sleep-exp-btn {
    --button-width: auto;  
    --button-height: 30px; 

    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: var(--button-width);
    height: var(--button-height);
    font-size: 1em;
    padding: 5px 15px;
    border: none;
    border-radius: 9999px;
    cursor: pointer;
    text-align: center;
    transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
    font-weight: bold;
    white-space: nowrap;
}

/* ✅ 睡眠EXPボタン（ON時） */
.sleep-exp-btn.active {
    background-color: #ffcc00 !important; /* ✅ ON時の背景色 */
    color: black !important; /* ✅ ON時の文字色 */
}

/* ✅ 睡眠EXPボタン（OFF時：ON時の色 + 50% 白フィルター + 文字色 #d3d3d3） */
.sleep-exp-btn:not(.active) {
    background-color: rgba(255, 204, 0, 0.3) !important; /* ✅ ON時の色に50%白フィルター */
    color: #cccccc !important; /* ✅ OFF時の文字色を #d3d3d3 に統一 */
}

/* ✅ EXP↑ボタン（共通スタイル） */
.exp-up-btn {
    --button-width: auto;
    --button-height: 30px;

    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: var(--button-width);
    height: var(--button-height);
    font-size: 1em;
    padding: 5px 15px;
    border: none;
    border-radius: 9999px;
    cursor: pointer;
    text-align: center;
    transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
    font-weight: bold;
    white-space: nowrap;
}

/* ✅ EXP↑ボタン（ON時：カードエリアの色 + 白50%フィルター） */
.exp-up-btn.active {
    background-color: rgba(255, 0, 51, 0.5) !important; /* ✅ 赤色 + 白50%フィルター */
    color: black !important; /* ✅ ON時の文字色 */
}

/* ✅ EXP↑ボタン（OFF時：白フィルター90% + 文字色 #d3d3d3） */
.exp-up-btn:not(.active) {
    background-color: rgba(255, 0, 51, 0.1) !important; /* ✅ 白フィルター90% */
    color: #cccccc !important; /* ✅ OFF時の文字色を #d3d3d3 に統一 */
}

/* ✅ EXP↓ボタン（共通スタイル） */
.exp-down-btn {
    --button-width: auto;
    --button-height: 30px;

    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: var(--button-width);
    height: var(--button-height);
    font-size: 1em;
    padding: 5px 15px;
    border: none;
    border-radius: 9999px;
    cursor: pointer;
    text-align: center;
    transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
    font-weight: bold;
    white-space: nowrap;
}

/* ✅ EXP↓ボタン（ON時：カードエリアの色 + 白50%フィルター） */
.exp-down-btn.active {
    background-color: rgba(51, 0, 255, 0.5) !important; /* ✅ 青色 + 白50%フィルター */
    color: black !important; /* ✅ ON時の文字色 */
}

/* ✅ EXP↓ボタン（OFF時：白フィルター90% + 文字色 #d3d3d3） */
.exp-down-btn:not(.active) {
    background-color: rgba(51, 0, 255, 0.1) !important; /* ✅ 白フィルター90% */
    color: #cccccc !important; /* ✅ OFF時の文字色を #d3d3d3 に統一 */
}
/* ✅ 各入力ボックスのサイズを個別に設定 */
.pokemon-name-input {
    width: var(--input-width, 120px) !important;
    height: var(--input-height, 15px) !important;
}
.nickname-input {
    width: var(--input-width, 120px) !important;
    height: var(--input-height, 15px) !important;
}
.level-input {
    width: var(--input-width, 40px) !important;
    height: var(--input-height, 15px) !important;
}
.exp-input {
    width: var(--input-width, 60px) !important;
    height: var(--input-height, 15px) !important;
}
.memo-input {
    width: var(--input-width, 150px) !important;
    height: var(--input-height, 15px) !important;
}
/* ✅ 目標レベルのテキストボックス（中央揃え） */
.target-input {
    width: var(--input-width, 40px) !important;
    height: var(--input-height, 15px) !important;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
}
/* ✅ 目標レベルのテキストボックスとボタンを横並びに */
.target-level-container {
    display: flex;
    align-items: center;
    gap: 5px; /* テキストボックスとボタンの間隔 */
}

/* ✅ 目標レベルボタンの親要素 */
.target-level-buttons {
    display: flex;
    position: relative; /* ボタンの基準位置 */
    gap: 5px; /* ボタン間隔 */
}

/* ✅ 目標レベルのボタン */
.target-btn {
    width: 30px;
    height: 30px;
    border: 2px solid black;
    background: none;
    color: black;
    font-size: 1em;
    font-weight: bold;
    cursor: pointer;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
}
/* ✅ 目標レベルのボタン選択時（グレー背景） */
.target-btn.selected {
    background-color: #cccccc;  /* グレー */
    color: black;  /* 文字色は黒のまま */
}

/* バナーの下に配置するボタンエリア */
.button-container {
    display: flex;
    width: 100%;
    justify-content: flex-start; /* 左寄せに設定 */
    margin: 0;  /* 余白削除 */
    padding: 0; /* 余白削除 */
}

/* 2つのボタンの共通スタイル */
.nav-button {
    background-color: #dfdfdf; /* ボタンの背景色 */
    color: black; /* テキストの色 */
    border: none;
    width: 25%; /* 左半分を2分割するので25%ずつ */
    height: 50px; /* ボタンの高さ */
    font-size: 16px; /* フォントサイズ */
    text-align: center; /* テキスト中央寄せ */
    line-height: 50px; /* 縦方向も中央揃え */
    font-weight: bold;
    border-radius: 0; /* 角丸なし */
    padding: 0; /* 余白なし */
}

/* 右半分の空白部分を維持 */
.empty-space {
    width: 50%;
}

/* 追加: ポップアップ用のオーバーレイ背景 */
.popup-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); /* 背景を少し暗く */
    z-index: 1000; /* 情報入力エリアの下に表示 */
}

/* 情報入力エリアのポップアップ設定 */
#formContainer {
    display: none; /* 初期状態では非表示 */
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 999; /* オーバーレイより上に表示 */
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

/* 閉じるボタンのスタイル */
.close-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    background: none;
    border: none;
    font-size: 24px;
    cursor: pointer;
}

/* 右下の「+」ボタン */
.add-btn {
    position: fixed;
    bottom: var(--add-btn-bottom, 60px); /* 位置を調整可能 */
    right: var(--add-btn-right, 30px);   /* 位置を調整可能 */
    width: var(--add-btn-size, 80px);    /* サイズを調整可能 */
    height: var(--add-btn-size, 80px);   /* サイズを調整可能 */
    font-size: var(--add-btn-font-size, 45px); /* フォントサイズを調整可能 */
    font-weight:bold;
    background-color: var(--add-btn-color, #84ccce); /* 色を調整可能 */
    color: white;
    border: none;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 900; 
}

.card-preview-area {
    width: var(--preview-card-width, 240px);
    height: var(--preview-card-height, 480px);
    padding: 10px;
     border: none;
    border-radius: 10px;
    box-shadow: none;
    margin-left: 20px; /* 情報入力エリアとの間隔 */
    display: none; /* 初期状態では非表示 */
    display: inline-block; /* block だと幅を取る可能性があるので修正 */
}

addButton.addEventListener('click', function() {
    console.log("追加ボタンが押されたよ！");  // クリック確認
    formContainer.style.display = 'block';
    popupOverlay.style.display = 'block';
    pokemonDisplay.style.display = 'flex';

    console.log("formContainerの表示状態:", formContainer.style.display);
    console.log("popupOverlayの表示状態:", popupOverlay.style.display);
    console.log("pokemonDisplayの表示状態:", pokemonDisplay.style.display);
});

.card-preview-area .pokemon-box {
    width: var(--preview-card-width, 120px);
    height: var(--preview-card-height, 240px);
}

#formContainer {
    z-index: 1100; /* ✅ 情報入力エリアをさらに上にして、グレーがかからないように */
}
